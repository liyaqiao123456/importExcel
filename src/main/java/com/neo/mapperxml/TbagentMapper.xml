<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neo.mapper.TbagentMapper">
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.neo.entity.Tbagent">
    <id column="job_number" jdbcType="INTEGER" property="job_number" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="company_rankings" jdbcType="INTEGER" property="company_rankings" />
    <result column="department_rankings" jdbcType="INTEGER" property="department_rankings" />
    <result column="region_rankings" jdbcType="INTEGER" property="region_rankings" />
    <result column="distance_first_company" jdbcType="DECIMAL" property="distance_first_company" />
    <result column="distance_first_department" jdbcType="DECIMAL" property="distance_first_department" />
    <result column="distance_first_region" jdbcType="DECIMAL" property="distance_first_region" />
    <result column="participate" jdbcType="INTEGER" property="participate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_number, department, region, username, idcard, company_rankings, department_rankings, 
    region_rankings, distance_first_company, distance_first_department, distance_first_region, 
    participate
  </sql>
  <select id="selectByExample" parameterType="com.neo.entity.TbagentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent
    where job_number = #{job_number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neo.entity.TbagentCriteria">
    delete from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neo.entity.Tbagent">
    insert into agent (job_number, department, region, 
      username, idcard, company_rankings, 
      department_rankings, region_rankings, distance_first_company, 
      distance_first_department, distance_first_region, 
      participate)
    values (#{job_number,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{company_rankings,jdbcType=INTEGER}, 
      #{department_rankings,jdbcType=INTEGER}, #{region_rankings,jdbcType=INTEGER}, #{distance_first_company,jdbcType=DECIMAL}, 
      #{distance_first_department,jdbcType=DECIMAL}, #{distance_first_region,jdbcType=DECIMAL}, 
      #{participate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.Tbagent">
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="company_rankings != null">
        company_rankings,
      </if>
      <if test="department_rankings != null">
        department_rankings,
      </if>
      <if test="region_rankings != null">
        region_rankings,
      </if>
      <if test="distance_first_company != null">
        distance_first_company,
      </if>
      <if test="distance_first_department != null">
        distance_first_department,
      </if>
      <if test="distance_first_region != null">
        distance_first_region,
      </if>
      <if test="participate != null">
        participate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="job_number != null">
        #{job_number,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        #{participate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neo.entity.TbagentCriteria" resultType="java.lang.Long">
    select count(*) from agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent
    <set>
      <if test="record.job_number != null">
        job_number = #{record.job_number,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.company_rankings != null">
        company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.department_rankings != null">
        department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.region_rankings != null">
        region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      </if>
      <if test="record.distance_first_company != null">
        distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_department != null">
        distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="record.distance_first_region != null">
        distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="record.participate != null">
        participate = #{record.participate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent
    set job_number = #{record.job_number,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      company_rankings = #{record.company_rankings,jdbcType=INTEGER},
      department_rankings = #{record.department_rankings,jdbcType=INTEGER},
      region_rankings = #{record.region_rankings,jdbcType=INTEGER},
      distance_first_company = #{record.distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{record.distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{record.distance_first_region,jdbcType=DECIMAL},
      participate = #{record.participate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.Tbagent">
    update agent
    <set>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="company_rankings != null">
        company_rankings = #{company_rankings,jdbcType=INTEGER},
      </if>
      <if test="department_rankings != null">
        department_rankings = #{department_rankings,jdbcType=INTEGER},
      </if>
      <if test="region_rankings != null">
        region_rankings = #{region_rankings,jdbcType=INTEGER},
      </if>
      <if test="distance_first_company != null">
        distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_department != null">
        distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      </if>
      <if test="distance_first_region != null">
        distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      </if>
      <if test="participate != null">
        participate = #{participate,jdbcType=INTEGER},
      </if>
    </set>
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.Tbagent">
    update agent
    set department = #{department,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      company_rankings = #{company_rankings,jdbcType=INTEGER},
      department_rankings = #{department_rankings,jdbcType=INTEGER},
      region_rankings = #{region_rankings,jdbcType=INTEGER},
      distance_first_company = #{distance_first_company,jdbcType=DECIMAL},
      distance_first_department = #{distance_first_department,jdbcType=DECIMAL},
      distance_first_region = #{distance_first_region,jdbcType=DECIMAL},
      participate = #{participate,jdbcType=INTEGER}
    where job_number = #{job_number,jdbcType=INTEGER}
  </update>
</mapper>